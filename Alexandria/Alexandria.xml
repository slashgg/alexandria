<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Alexandria</name>
    </assembly>
    <members>
        <member name="M:Alexandria.Controllers.CompetitionsController.GetrActiveCompetitions">
            <summary>
            Get all active Competitions
            </summary>
            <returns></returns>
        </member>
        <member name="M:Alexandria.Controllers.CompetitionsController.GetCompetitionDetail(System.Guid)">
            <summary>
            Get Competition by Id
            </summary>
            <param name="competitionId">GUID of the competition</param>
            <returns></returns>
        </member>
        <member name="M:Alexandria.Controllers.CompetitionsController.GetCompetitionDetailBySlug(System.String)">
            <summary>
            Get competition by slug
            </summary>
            <param name="competitionSlug">Slug of the competiiton</param>
            <returns></returns>
        </member>
        <member name="M:Alexandria.Controllers.Competition.CompetitionTeamsController.CreateTeam(Alexandria.DTO.Team.Create)">
            <summary>
            Create a Team for a Competition
            </summary>
            <param name="payload">Team Payload</param>
            <param name="competitionId">GUID of the competition</param>
        </member>
        <member name="M:Alexandria.Controllers.Competition.CompetitionTournamentsController.GetTournamentsForCompetition">
            <summary>
            Get the tournaments for this competition
            </summary>
            <param name="competitionId">GUID or slug of the competition</param>
            <returns></returns>
        </member>
        <member name="M:Alexandria.Controllers.Competition.CompetitionTournamentsController.GetOpenApplications">
            <summary>
            Get the currently tournaments open for application for this competition
            </summary>
            <param name="competitionId">GUID or slug of the competition</param>
            <returns></returns>
        </member>
        <member name="M:Alexandria.Controllers.TeamsController.DisbandTeam(System.Guid)">
            <summary>
            Disbands the specified team
            Required Permissions: `team::{teamId}::disband`
            </summary>
            <param name="teamId">Targeted TeanUd</param>
            <returns></returns>
        </member>
        <member name="M:Alexandria.Controllers.Team.TeamInvitesController.GetTeamInvites">
            <summary>
            Get Invites for the given team
            Permissions Required: `team::{teamId}::invite--send`
            </summary>
            <returns></returns>
        </member>
        <member name="M:Alexandria.Controllers.Team.TeamInvitesController.SendInvite(Alexandria.DTO.Team.InviteRequest)">
            <summary>
            Send Invite to a User via Email or UserName
            </summary>
            <param name="teamId">GUID of the Team</param>
            <param name="payload">The qualifying Email or UserName ({displayName}#{number})</param>
            <returns></returns>
        </member>
        <member name="M:Alexandria.Controllers.Team.TeamInvitesController.ResendInvite(System.Guid)">
            <summary>
            Resends an existing invite
            Required Permissions: `team::{teamId}::invite--send`
            </summary>
            <param name="teamId">GUID of the Team</param>
            <param name="inviteId">GUID of the Invite</param>
            <returns></returns>
        </member>
        <member name="M:Alexandria.Controllers.Team.TeamInvitesController.RevokeInvite(System.Guid)">
            <summary>
            Revokes an Invite
            Required permissions: `team::{teamId}::invite--revoke`
            </summary>
            <param name="teamId">GUID of the Team</param>
            <param name="inviteId">GUID of the invite</param>
            <returns></returns>
        </member>
        <member name="M:Alexandria.Controllers.Team.TeamMembershipController.RemoveMember(System.Guid)">
            <summary>
            Remove a Member from a Team
            </summary>
            <param name="teamId">GUID of the Team</param>
            <param name="membershipId">GUID of the Membership</param>
            <returns></returns>
        </member>
        <member name="M:Alexandria.Controllers.UserProfileController.CreateProfile(Alexandria.DTO.UserProfile.Create)">
            <summary>
            This will create a UserProfile after an Account has been established in Passport
            </summary>
            <param name="payload">The User Account Information</param>
            <returns></returns>
        </member>
        <member name="M:Alexandria.Controllers.UserProfileController.GetUserProfile">
            <summary>
            Get the UserProfile of the logged in User
            </summary>
            <returns></returns>
        </member>
        <member name="M:Alexandria.Controllers.UserProfile.UserProfileInvitesController.GetInvites">
            <summary>
            Get the Invites for the logged in user
            </summary>
            <returns></returns>
        </member>
        <member name="M:Alexandria.Controllers.UserProfile.UserProfileInvitesController.DeclineInvite(System.Guid)">
            <summary>
            Decline the targeted invite
            Reqyured Permissions: `invite::{inviteId}::handle`
            </summary>
            <param name="inviteId">GUID of the Invite</param>
            <returns></returns>
        </member>
        <member name="M:Alexandria.Controllers.UserProfile.UserProfileInvitesController.AcceptInvite(System.Guid)">
            <summary>
            Accept the targeted invite
            Reqyured Permissions: `invite::{inviteId}::handle`
            </summary>
            <param name="inviteId">GUID of the targeted invite</param>
            <returns></returns>
        </member>
    </members>
</doc>
